name: pytest

on:
  push:
    branches: [main, test]
    paths-ignore: 
      - '**.md'
  
  pull_request:
    branches: [main, test]
    paths-ignore: '**.md'
    
  release:
    types: [published]

jobs:
  #스타일 체크
  style:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout branch
        uses: actions/checkout@v3
      - name: Setup pytho 3.10
        uses: actions/setup-python@v4
        with:
          python-version: "3.10"
      - name: Setup poetry
        run: |
          python -m pip install pip
          pip install poetry
          #add path for poetry
          echo "$HOME/.poetry/bin" >> $GITHUB_PATH
      - name: Install dependencies
        run: poetry install --no-interaction --only style
      - name: Check style with black
        run: poetry run black --check .
      - name: Check style with isort
        run: poetry run isort --check .
        
  # 타입체크
  type:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout branch
        uses: actions/checkout@v3
      - name: Setup pytho 3.10
        uses: actions/setup-python@v4
        with:
          python-version: "3.10"
      - name: Setup poetry
        run: |
          python -m pip install pip
          pip install poetry
          #add path for poetry
          echo "$HOME/.poetry/bin" >> $GITHUB_PATH
      - name: Install dependencies
        run: poetry install --no-interaction --only type
      - name: Check type
        run: poetry run mypy
  
  #pytest 
  test:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout branch
        uses: actions/checkout@v3
      - name: Setup pytho 3.10
        uses: actions/setup-python@v4
        with:
          python-version: "3.10"
      - name: Setup poetry
        run: |
          python -m pip install pip
          pip install poetry
          #add path for poetry
          echo "$HOME/.poetry/bin" >> $GITHUB_PATH
      - name: Install dependencies
        run: poetry install --no-interaction --only test
      - name: Check test
        run: poetry run pytest 
        
        
        
  build:
    name: build and upload
    runs-on: ubuntu-latest
    needs: [style, type, test]
    
    # main에 push 되었을때 현재 main 밖에 없긴한데 ref가 refs/heads/<branch> name으로 받는 걸 기억할 것
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    
    steps:
      - name: Checkout branch
        uses: actions/checkout@v3
      - name: Setup pytho 3.10
        uses: actions/setup-python@v4
        with:
          python-version: "3.10"
      - name: Setup poetry
        run: |
          python -m pip install pip
          pip install poetry
          #add path for poetry
          echo "$HOME/.poetry/bin" >> $GITHUB_PATH 
      - name: Install dependencies
        #--only-root 해도 괜찮은가?
        run: poetry install --no-interaction
      - name: Build whl file
        run: poetry build
      - name: Upload whl file
        uses: actions/upload-artifact@v2
        with:
          name: build
          path: dist/*.whl
      #    #보존기간 정의
          retention-days: 1
          
  build-and-release:
    if: github.event_name == 'release'
    name: build and release
    runs-on: ubuntu-latest
    needs: [style, type, test]
    steps:
      - name: Checkout branch
        uses: actions/checkout@v3
      - name: Setup python 3.10
        uses: actions/setup-python@v4
        with:
          python-version: "3.10"
      - name: Setup poetry
        run: |
          python -m pip install pip
          pip install poetry
          #add path for poetry
          echo "$HOME/.poetry/bin" >> $GITHUB_PATH 
      - name: Install dependencies
        run: poetry install --no-interaction
      - name: Build whl file
        run: poetry build
      - name: Upload release
        uses: JasonEtco/upload-to-release@master
        with:
          args: dist/*.whl
        env:
          GITHUB_TOKEN: ${{ secrets.TOKEN }}
